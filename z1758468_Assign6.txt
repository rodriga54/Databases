mysql> source Z1758468_Assign6.sql
Use of classicmodels database
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
Explain statement 
 EXPLAIN returns a row of information for each table used in the SELECT
 statement. It lists the tables in the output in the order that MySQL
 would read them while processing the statement. MySQL resolves all joins
 using a nested-loop join method. This means that MySQL reads a row from
 the first table, and then finds a matching row in the second table, the
 third table, and so on. When all tables are processed, MySQL outputs the
 selected columns and backtracks through the table list until a table is
 found for which there are more matching rows. The next row is read from
 this table and the process continues with the next table.
+----+-------------+-----------+------+---------------+------+---------+------+------+---------------------------------+
| id | select_type | table     | type | possible_keys | key  | key_len | ref  | rows | Extra                           |
+----+-------------+-----------+------+---------------+------+---------+------+------+---------------------------------+
|  1 | SIMPLE      | Customers | ALL  | NULL          | NULL | NULL    | NULL |  122 | Using temporary; Using filesort |
|  1 | SIMPLE      | Payments  | ALL  | NULL          | NULL | NULL    | NULL |  272 |                                 |
+----+-------------+-----------+------+---------------+------+---------+------+------+---------------------------------+
2 rows in set (0.00 sec)

Describe statement 
 Describes the table in detail: field name, type(character, int, etc.)
 NUll requirements, list the Primary Keys.
+------------------------+-------------+------+-----+---------+-------+
| Field                  | Type        | Null | Key | Default | Extra |
+------------------------+-------------+------+-----+---------+-------+
| customerNumber         | int(11)     | NO   | PRI | NULL    |       |
| customerName           | varchar(50) | NO   |     | NULL    |       |
| contactLastName        | varchar(50) | NO   |     | NULL    |       |
| contactFirstName       | varchar(50) | NO   |     | NULL    |       |
| phone                  | varchar(50) | NO   |     | NULL    |       |
| addressLine1           | varchar(50) | NO   |     | NULL    |       |
| addressLine2           | varchar(50) | YES  |     | NULL    |       |
| city                   | varchar(50) | NO   |     | NULL    |       |
| state                  | varchar(50) | YES  |     | NULL    |       |
| postalCode             | varchar(15) | YES  |     | NULL    |       |
| country                | varchar(50) | NO   |     | NULL    |       |
| salesRepEmployeeNumber | int(11)     | YES  |     | NULL    |       |
| creditLimit            | double      | YES  |     | NULL    |       |
+------------------------+-------------+------+-----+---------+-------+
13 rows in set (0.00 sec)

+----------------+-------------+------+-----+---------+-------+
| Field          | Type        | Null | Key | Default | Extra |
+----------------+-------------+------+-----+---------+-------+
| customerNumber | int(11)     | NO   | PRI | NULL    |       |
| checkNumber    | varchar(50) | NO   | PRI | NULL    |       |
| paymentDate    | datetime    | NO   |     | NULL    |       |
| amount         | double      | NO   |     | NULL    |       |
+----------------+-------------+------+-----+---------+-------+
4 rows in set (0.00 sec)

Database changed
2. creating table called owners
Query OK, 0 rows affected (0.04 sec)

3. Adding 5 values to owner table
Query OK, 1 row affected (0.06 sec)

Query OK, 1 row affected (0.04 sec)

Query OK, 1 row affected (0.08 sec)

Query OK, 1 row affected (0.07 sec)

Query OK, 1 row affected (0.07 sec)

4. selecting owner table
+----------+----------------+
| owner_ID | Oname          |
+----------+----------------+
|        1 | Russell Wilson |
|        2 | Tom Brady      |
|        3 | Cam Newton     |
|        4 | Andrew Luck    |
|        5 | Payton Manning |
+----------+----------------+
5 rows in set (0.00 sec)

5. creating table called pet
Query OK, 0 rows affected (0.10 sec)

6. Adding 5 values to pet table
Query OK, 1 row affected (0.08 sec)

Query OK, 1 row affected (0.07 sec)

Query OK, 1 row affected (0.02 sec)

Query OK, 1 row affected (0.02 sec)

Query OK, 1 row affected (0.01 sec)

7. selecting pet table
+-------+---------+----------+
| petID | Pname   | owner_ID |
+-------+---------+----------+
|     1 | SeaHawk |        1 |
|     2 | Patriot |        2 |
|     3 | Panther |        3 |
|     4 | Colt    |        4 |
|     5 | Bronco  |        5 |
+-------+---------+----------+
5 rows in set (0.00 sec)

8. Altering pet table to add new column
Query OK, 5 rows affected (0.22 sec)
Records: 5  Duplicates: 0  Warnings: 0

9. Updating Ptype column with values.
Query OK, 1 row affected (0.02 sec)
Rows matched: 1  Changed: 1  Warnings: 0

Query OK, 1 row affected (0.13 sec)
Rows matched: 1  Changed: 1  Warnings: 0

Query OK, 1 row affected (0.05 sec)
Rows matched: 1  Changed: 1  Warnings: 0

Query OK, 1 row affected (0.08 sec)
Rows matched: 1  Changed: 1  Warnings: 0

Query OK, 1 row affected (0.06 sec)
Rows matched: 1  Changed: 1  Warnings: 0

+-------+---------+----------+-------+
| petID | Pname   | owner_ID | Ptype |
+-------+---------+----------+-------+
|     1 | SeaHawk |        1 | Dog   |
|     2 | Patriot |        2 | Cat   |
|     3 | Panther |        3 | Bird  |
|     4 | Colt    |        4 | Fish  |
|     5 | Bronco  |        5 | Horse |
+-------+---------+----------+-------+
5 rows in set (0.00 sec)

11. Creating a new view/table called owners_pets.
Query OK, 0 rows affected (0.10 sec)

12. Selecting new view/table. 
+----------------+---------+
| Oname          | Pname   |
+----------------+---------+
| Andrew Luck    | Colt    |
| Cam Newton     | Panther |
| Payton Manning | Bronco  |
| Russell Wilson | SeaHawk |
| Tom Brady      | Patriot |
+----------------+---------+
5 rows in set (0.00 sec)

1. Dropping all tables and view created above.
Query OK, 0 rows affected (0.11 sec)

Query OK, 0 rows affected (0.00 sec)

Query OK, 0 rows affected (0.02 sec)
